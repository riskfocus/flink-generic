#Copyright 2021-2023 Ness Digital Engineering
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.

version: '3.3'
# Creates all infrastructure needed
services:

  redis:
    image: library/redis
    container_name: redis
    command: redis-server --requirepass e1adc4f1dd55364963a71e53bc8e7557ed5c26e9fc5f3c69a284adf1ec614860
    ports:
      - 6379:6379

  phpredis:
    image: erikdubbelboer/phpredisadmin
    container_name: redis-admin
    ports:
      - 8095:80
    environment:
      - REDIS_1_HOST=redis
      - REDIS_1_PORT=6379
      - REDIS_1_AUTH=e1adc4f1dd55364963a71e53bc8e7557ed5c26e9fc5f3c69a284adf1ec614860
    depends_on:
      - redis

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.0
    ports:
      - 2182:2182
    environment:
      HOSTNAME: localhost
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: localhost:2889:3889

  kafka:
    image: confluentinc/cp-enterprise-kafka:7.2.0
    container_name: kafka
    depends_on:
      - zookeeper

    environment:
      KAFKA_BROKER_ID: 10
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2182
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: OUTER:PLAINTEXT,INNER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: OUTER://localhost:19093,INNER://kafka:9093
      KAFKA_JMX_PORT: 9991
      KAFKA_INTER_BROKER_LISTENER_NAME: INNER
      KAFKA_LOG_RETENTION_MINUTES: 120 # 2 hours
      KAFKA_LOG_RETENTION_BYTES: 262144000 # 250 MB
      KAFKA_LOG_SEGMENT_BYTES: 524288000 # 500 MB
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_MIN_ISYNC_REPLICAS: 1
      KAFKA_LOG4J_LOGGERS: "kafka=WARN,kafka.server=WARN,kafka.controller=WARN"
      KAFKA_LOG4J_ROOT_LOGLEVEL: "WARN"
      KAFKA_TOOLS_LOG4J_LOGLEVEL: "ERROR"
      KAFKA_TRANSACTION_STATE_LOG_NUM_PARTITIONS: 2
      KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: 2
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'false'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      CONFLUENT_METRICS_REPORTER_PUBLISH_MS: 3000
      KAFKA_MAX_MESSAGE_BYTES: 90000000

    ports:
      - 19093:19093
      - 9093:9093

  topic-initializer:
    image: confluentinc/cp-enterprise-kafka:7.2.0
    hostname: localhost
    container_name: initializer
    depends_on:
      - kafka
    command: "bash -c -a 'echo Waiting for Kafka to be ready... && \
                       /etc/confluent/docker/configure && \
                       cub kafka-ready -b kafka:9093 1 60 && \
                       sleep 5 && \
                       kafka-topics --bootstrap-server kafka:9093 --topic optionsPricesLive --create --replication-factor 1 --partitions 4 && \
                       kafka-topics --bootstrap-server kafka:9093 --topic ycInputsLive --create --replication-factor 1 --partitions 4 && \
                       kafka-topics --bootstrap-server kafka:9093 --topic interestRatesSnapshot --create --replication-factor 1 --partitions 1 && \
                       kafka-topics --bootstrap-server kafka:9093 --topic smoothingInputsLatest --create --replication-factor 1 --partitions 4 '"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
      KAFKA_ADVERTISED_LISTENERS: ignored

  mysql:
    image: mysql:5.7.41
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - ./conf/mysql-dump:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: example

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    environment:
          ADMINER_DEFAULT_SERVER: mysql
    depends_on:
      - mysql
    ports:
      - 8080:8080

  jmx-kafka:
    image: "sscaling/jmx-prometheus-exporter"
    ports:
     - "5556:5556"
    environment:
     CONFIG_YML : "/etc/jmx_exporter/config.yml"
    volumes:
     - ./conf/jmx_exporter/config_kafka.yml:/etc/jmx_exporter/config.yml
    container_name: jmx-kafka
    depends_on:
     - kafka

  prometheus:
    image: prom/prometheus:v2.20.1
    volumes:
      - ./conf/prometheus/prometheus.yml:/prometheus_config.yaml:ro
    command: --config.file="/prometheus_config.yaml"
    ports:
      - "9090:9090"
    restart: always

  grafana:
    image: grafana/grafana:7.1.3
    depends_on:
      - prometheus
    environment:
      GF_PATHS_DATA: /var/lib/grafana
      GF_SECURITY_ADMIN_PASSWORD: password123
    ports:
      - "3000:3000"
    volumes:
     - ./conf/grafana/provisioning:/etc/grafana/provisioning
     - ./conf/grafana/dashboards:/var/lib/grafana/dashboards
    restart: always
