// Copyright 2021-2023 Ness Digital Engineering
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
pipeline {
    agent any 
    environment {
        ORG = 'RiskFocus'
        APP_NAME = 'flink-generic'
        BRANCH_NAME = 'jenkins-build'
        SONAR_OPTS = ' '
        CODEARTIFACT_AUTH_TOKEN = credentials('codeartifact-auth-token')
        group_prefix            = credentials('group-prefix')
        domain_owner            = credentials('domain-owner')
        AWS_ACCESS_KEY_ID       = credentials('aws-access-key')
        AWS_SECRET_ACCESS_KEY   = credentials('aws-secret-key')
        AWS_SESSION_TOKEN       = credentials('aws-token')
        CODEARTIFACT_URL        = "abc"
        SETTINGS_FILE_PATH = "/var/jenkins_home/workspace/super-seed/settings.xml"
    }
    
    tools {
        maven "maven-3.9.0"
    }

    stages {

        stage('CI Build') {
            // when {
            //     changeRequest()
            // }
            environment {
                PREVIEW_VERSION = "2.0.7-SNAPSHOT"
                PREVIEW_NAMESPACE = "$APP_NAME-$BRANCH_NAME".toLowerCase()
            }
            steps {
                sh 'pwd'
                sh "aws codeartifact get-repository-endpoint --domain ${group_prefix}-domain --repository ${group_prefix}-repo --format maven >> codeartifact_json.txt"
                sh '''export CODEARTIFACT_URL=$(jq '.repositoryEndpoint' codeartifact_json.txt)'''
                sh 'echo "code-artifact-url :" ${CODEARTIFACT_URL}'
                sh "rm codeartifact_json.txt"
                sh 'echo "code-artifact-url :" ${CODEARTIFACT_URL}'
                dir('/var/jenkins_home/workspace/super-seed'){
                sh 'ls'
                sh 'mvn -X clean | grep "settings"'
                sh 'mv settings.xml /var/jenkins_home/.m2/'
                }
                sh 'pwd'
                sh 'export'
                sh 'echo "code-artifact-url :" ${CODEARTIFACT_URL}'
                sh 'mvn clean install -Dcodeartifact_url=${CODEARTIFACT_URL}'            
            }
        }

        stage('Build and push snapshot') {
            when {
                not {
                    anyOf {
                        branch 'master'
                        branch pattern: "release-.*", comparator: "REGEXP"
                        changeRequest()
                    }
                }
            } 
            environment {
                PREVIEW_VERSION = "2.0.4-SNAPSHOT"
                PREVIEW_NAMESPACE = "$APP_NAME-$BRANCH_NAME".toLowerCase()
                SETTINGS_FILE_PATH = "/var/jenkins_home/workspace/super-seed/settings.xml"
            }
            steps {
                sh 'pwd'
                // sh "aws codeartifact get-repository-endpoint --domain ${group_prefix}-domain --repository ${group_prefix}-repo --format maven >> codeartifact_json.txt"
                // sh '''export CODEARTIFACT=$(jq '.repositoryEndpoint' codeartifact_json.txt)'''
                // sh "rm codeartifact_json.txt"
                // sh 'export'
                sh 'mvn clean deploy -Dcodeartifact_url=${CODEARTIFACT_URL}'            
            }
        }
    }
}