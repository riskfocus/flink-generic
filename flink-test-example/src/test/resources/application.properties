applicationId=generic-test-framework
bootstrap-servers=localhost:19093
#
spring.kafka.producer.acks=1
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.ByteArraySerializer
spring.kafka.producer.bootstrap-servers=${bootstrap-servers}
# IT test consumer settings
spring.kafka.consumer.group-id=flink-test-example-checker
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
spring.kafka.consumer.bootstrap-servers=${bootstrap-servers}
spring.kafka.consumer.fetch-max-wait=5000
spring.kafka.consumer.enable-auto-commit=false

#
spring.kafka.streams.applicationId=${applicationId}
spring.kafka.streams.bootstrapServers=${bootstrap-servers}
spring.kafka.streams.properties.num.stream.threads=4

### Test application specific section
example.test.customersCount=50
example.test.commoditiesCount=100
example.test.ordersCount=500